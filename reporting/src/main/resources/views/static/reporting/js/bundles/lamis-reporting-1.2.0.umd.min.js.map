{"version":3,"sources":["../../../../../../../../node_modules/tslib/tslib.es6.js","ng://lamis-reporting-1.2.0/lib/services/report.service.ts","ng://lamis-reporting-1.2.0/lib/components/art-summary.component.ts","ng://lamis-reporting-1.2.0/lib/components/patient-line-list.component.ts","ng://lamis-reporting-1.2.0/lib/components/data-conversion.component.ts","ng://lamis-reporting-1.2.0/lib/services/reports.route.ts","ng://lamis-reporting-1.2.0/lib/reports.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","moment","moment_","ReportService","http","serverUrl","this","resourceUrl","SERVER_API_URL","paramIndex","decorator","prototype","artSummary","reportingPeriod","id","today","params","HttpParams","append","format","DATE_FORMAT","toString","get","responseType","patientLineList","dateCurrentStatusBegin","isValid","dateCurrentStatusEnd","dateLastViralLoadBegin","dateLastViralLoadEnd","dateRegistrationBegin","dateRegistrationEnd","dateStartedBegin","dateStartedEnd","post","convertData","ids","report","labTest","forEach","getRegimenTypes","getStates","getLgasByState","getActiveFacility","listFacilities","download","name","listFiles","HttpClient","Inject","args","SERVER_API_URL_CONFIG","Injectable","providedIn","tslib_1.__param","ArtSummaryComponent","service","stompService","domSanitizer","running","message","finished","Date","todaySelectable","current","ngOnInit","_this","subscribe","res","facility","topicSubscription","watch","msg","body","files","file","File","type","saveAs","tabChanged","event","index","monthChanged","month","getMonth","convert","ngOnDestroy","unsubscribe","RxStompService","DomSanitizer","Component","selector","template","PatientLineListComponent","states","regimenTypes","stateChanged","state","lgas","DataConversionComponent","reportService","selectedFacilities","facilities","labTests","console","log","pipe","catchError","err","EMPTY","title","breadcrumb","ɵ1","ɵ2","ɵ3","ɵ4","ROUTES","path","data","ɵ0","children","component","ReportsModule","NgModule","declarations","imports","CommonModule","FormsModule","ReactiveFormsModule","MatInputModule","MatIconModule","MatDividerModule","MatCardModule","MatSelectModule","MatButtonModule","MatTabsModule","MatDatepickerModule","RouterModule","forChild","MatProgressBarModule","MatListModule","MatCheckboxModule","DateRangePickerModule","DropDownListModule","DatePickerModule","MatDateFormatModule","MatRadioModule","exports","providers"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Inject, Injectable } from \"@angular/core\";\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { DATE_FORMAT, SERVER_API_URL_CONFIG, ServerApiUrlConfig } from \"@lamis/web-core\";\nimport { Facility } from \"../components/art-summary.component\";\nimport { Observable } from \"rxjs\";\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ReportService {\n    public resourceUrl = '';\n\n    constructor(private http: HttpClient, @Inject(SERVER_API_URL_CONFIG) private serverUrl: ServerApiUrlConfig) {\n        this.resourceUrl = serverUrl.SERVER_API_URL + '/api/reporting';\n    }\n\n    artSummary(reportingPeriod: Date, id: number, today: boolean) {\n        let params = new HttpParams();\n        params = params.append('reportingPeriod', moment(reportingPeriod).format(DATE_FORMAT));\n        params = params.append(\"id\", id.toString());\n        params = params.append(\"today\", today.toString());\n        return this.http.get(`${this.resourceUrl}/art-summary`, {params, responseType: 'blob'})\n    }\n\n    patientLineList(params: any) {\n        params.dateCurrentStatusBegin = params.dateCurrentStatusBegin != null && params.dateCurrentStatusBegin.isValid() ? params.dateCurrentStatusBegin.format(DATE_FORMAT) : null;\n        params.dateCurrentStatusEnd = params.dateCurrentStatusEnd != null && params.dateCurrentStatusEnd.isValid() ? params.dateCurrentStatusEnd.format(DATE_FORMAT) : null;\n        params.dateLastViralLoadBegin = params.dateLastViralLoadBegin != null && params.dateLastViralLoadBegin.isValid() ? params.dateLastViralLoadBegin.format(DATE_FORMAT) : null;\n        params.dateLastViralLoadEnd = params.dateLastViralLoadEnd != null && params.dateLastViralLoadEnd.isValid() ? params.dateLastViralLoadEnd.format(DATE_FORMAT) : null;\n        params.dateRegistrationBegin = params.dateRegistrationBegin != null && params.dateRegistrationBegin.isValid() ? params.dateRegistrationBegin.format(DATE_FORMAT) : null;\n        params.dateRegistrationEnd = params.dateRegistrationEnd != null && params.dateRegistrationEnd.isValid() ? params.dateRegistrationEnd.format(DATE_FORMAT) : null;\n        params.dateStartedBegin = params.dateStartedBegin != null && params.dateStartedBegin.isValid() ? params.dateStartedBegin.format(DATE_FORMAT) : null;\n        params.dateStartedEnd = params.dateStartedEnd != null && params.dateStartedEnd.isValid() ? params.dateStartedEnd.format(DATE_FORMAT) : null;\n        return this.http.post(`${this.resourceUrl}/patient-line-list`, params, {responseType: 'blob'})\n    }\n\n    convertData(ids: number[], report: number, labTest?: number) {\n        let params = new HttpParams();\n        ids.forEach(id => params = params.append(\"ids\", id.toString()));\n        if (!!labTest) {\n            params = params.append(\"labTest\", labTest.toString());\n        }\n        params = params.append(\"report\", report.toString());\n        return this.http.get(`${this.resourceUrl}/convert-data`, {params, responseType: 'blob'})\n    }\n\n    getRegimenTypes() {\n        return this.http.get<any[]>(`${this.resourceUrl}/regimen-types`)\n    }\n\n\n    getStates() {\n        return this.http.get<any[]>('/api/states')\n    }\n\n    getLgasByState(id) {\n        return this.http.get<any[]>(`/api/provinces/state/${id}`)\n    }\n\n    getActiveFacility() {\n        return this.http.get<Facility>('/api/facilities/active')\n    }\n\n    listFacilities() {\n        return this.http.get<Facility[]>(`${this.resourceUrl}/list-facilities`)\n    }\n\n    labTest() {\n        return this.http.get<any[]>(`${this.resourceUrl}/lab-tests`)\n    }\n\n    download(name: string): Observable<Blob> {\n        return this.http.get(`${this.resourceUrl}/download/${name}`, {responseType: 'blob'})\n    }\n\n    listFiles() {\n        return this.http.get<string[]>(`${this.resourceUrl}/list-files`)\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ReportService } from '../services/report.service';\r\nimport { RxStompService } from '@stomp/ng2-stompjs';\r\nimport { Message } from '@stomp/stompjs';\r\nimport { Subscription } from 'rxjs';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { saveAs } from 'file-saver';\r\n\r\nexport interface Facility {\r\n    id: number;\r\n    name: string;\r\n    selected: boolean;\r\n}\r\n\r\n@Component({\r\n    selector: 'art-summary',\r\n    templateUrl: './art-summary.component.html'\r\n})\r\nexport class ArtSummaryComponent implements OnInit, OnDestroy {\r\n    private topicSubscription: Subscription;\r\n    facility: Facility;\r\n    files: string[];\r\n    running = false;\r\n    message: any = 'Running';\r\n    finished = false;\r\n    reportingPeriod: Date = new Date();\r\n    today = new Date();\r\n    todaySelectable = true;\r\n\r\n    current: boolean = false;\r\n\r\n    constructor(private service: ReportService, private stompService: RxStompService, private domSanitizer: DomSanitizer) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.service.getActiveFacility().subscribe(res => this.facility = res);\r\n        this.topicSubscription = this.stompService.watch('/topic/art-summary/status').subscribe((msg: Message) => {\r\n            if (msg.body === 'start') {\r\n                this.running = true\r\n            } else if (msg.body === 'end') {\r\n                this.running = false;\r\n                this.finished = true;\r\n                this.message = 'Finished';\r\n                this.service.listFiles().subscribe(res => {\r\n                    this.files = res;\r\n                })\r\n            } else {\r\n                this.message = msg.body;\r\n                this.running = true;\r\n            }\r\n        })\r\n    }\r\n\r\n    download(name: string) {\r\n        this.service.download(name).subscribe(res => {\r\n            const file = new File([res], name + 'ART Summary Report.pdf', {type: 'application/octet-stream'});\r\n            saveAs(file);\r\n        });\r\n    }\r\n\r\n    tabChanged(event) {\r\n        if (event.index === 1) {\r\n            this.service.listFiles().subscribe(res => {\r\n                this.files = res;\r\n            })\r\n        }\r\n    }\r\n\r\n    monthChanged(month: Date) {\r\n        this.todaySelectable = new Date().getMonth() === month.getMonth()\r\n    }\r\n\r\n    convert() {\r\n        this.running = true;\r\n        this.finished = false;\r\n        this.service.artSummary(this.reportingPeriod, this.facility.id, this.current).subscribe((res)=> {\r\n            const file = new File([res], this.facility.name + '_ART Summary Report.pdf', {type: 'application/octet-stream'});\r\n            saveAs(file);\r\n        })\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.topicSubscription.unsubscribe()\r\n    }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Facility } from './art-summary.component';\nimport { saveAs } from 'file-saver';\nimport { ReportService } from '../services/report.service';\nimport { RxStompService } from '@stomp/ng2-stompjs';\nimport { Message } from '@stomp/stompjs';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Component({\n    selector: 'report-patient-line-list',\n    templateUrl: './patient-line-list.component.html',\n    styleUrls: ['./patient-line-list.component.scss']\n})\nexport class PatientLineListComponent implements OnInit, OnDestroy {\n    params: { [key: string]: any } = {};\n    states: any[];\n    regimenTypes: any[];\n    lgas: any[];\n    private topicSubscription: Subscription;\n    facility: Facility;\n    running = false;\n    finished = false;\n    today = moment();\n    message: any = 'Running';\n\n    constructor(private service: ReportService, private stompService: RxStompService) {\n    }\n\n    ngOnInit() {\n        this.service.getActiveFacility().subscribe(res => {\n            this.facility = res;\n            this.params['facilityId'] = this.facility.id;\n        });\n        this.topicSubscription = this.stompService.watch('/topic/patient-line-list/status').subscribe((msg: Message) => {\n            if (msg.body === 'start') {\n                this.running = true;\n                this.finished = false;\n                this.message = 'Running';\n            } else if (msg.body === 'end') {\n                this.running = false;\n                this.finished = true;\n                this.message = 'Finished';\n            } else {\n                this.message = msg.body;\n                this.running = true;\n                this.finished = false;\n            }\n        });\n        this.service.getStates().subscribe(res => this.states = res);\n        this.service.getRegimenTypes().subscribe(res => this.regimenTypes = res);\n    }\n\n    stateChanged(state) {\n        if (state && state.id) {\n            this.service.getLgasByState(state.id).subscribe(res => this.lgas = res)\n        }\n    }\n\n    convert() {\n        this.running = true;\n        this.finished = false;\n        this.service.patientLineList(this.params).subscribe((res) => {\n            this.running = false;\n            this.finished = true;\n            let format = this.params.format === 'xlsx' ? 'xlsx' : 'pdf';\n            const file = new File([res], `${this.facility.name}_Patient_Line_List.${format}`, {type: 'application/octet-stream'});\n            saveAs(file);\n        })\n    }\n\n    ngOnDestroy(): void {\n        this.topicSubscription.unsubscribe()\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { EMPTY, Subscription } from 'rxjs';\nimport { RxStompService } from '@stomp/ng2-stompjs';\nimport { Message } from '@stomp/stompjs';\nimport { ReportService } from '../services/report.service';\nimport { saveAs } from 'file-saver';\nimport { catchError } from 'rxjs/operators';\n\n@Component({\n    selector: 'data-conversion',\n    templateUrl: './data-conversion.component.html'\n})\nexport class DataConversionComponent implements OnInit, OnDestroy {\n    private topicSubscription: Subscription;\n    running = false;\n    message: any = 'Running';\n    finished = false;\n    facilities: any[];\n    selectedFacilities: any[] = [];\n    report: number;\n    labTest: any;\n    labTests: any[];\n\n    constructor(private stompService: RxStompService, private reportService: ReportService) {\n    }\n\n    ngOnInit(): void {\n        this.topicSubscription = this.stompService.watch('/topic/data-conversion/status').subscribe((msg: Message) => {\n            if (msg.body === 'start') {\n                this.running = true\n            } else if (msg.body === 'end') {\n                this.running = false;\n                this.finished = true;\n                this.message = 'Finished';\n            } else {\n                this.message = msg.body;\n                this.running = true;\n            }\n        });\n\n        this.reportService.listFacilities().subscribe(res => this.facilities = res);\n        this.reportService.labTest().subscribe(res => this.labTests = res)\n    }\n\n    ngOnDestroy(): void {\n        this.topicSubscription.unsubscribe()\n    }\n\n    convert() {\n        this.running = true;\n        this.finished = false;\n        console.log('Params 1', this.selectedFacilities, this.report, this.labTest);\n        this.reportService.convertData(this.selectedFacilities, this.report, this.labTest).pipe(\n            catchError((err: any) => {\n                this.running = false;\n                this.finished = true;\n                return EMPTY;\n            })).subscribe((res) => {\n            this.running = false;\n            this.finished = true;\n            let name = this.report === 1 ? 'Patient Data' : this.report === 2 ? 'Clinic Data' : 'Laboratory Data';\n            const file = new File([res], `${name}.xlsx`, {type: 'application/octet-stream'});\n            saveAs(file);\n        })\n    }\n\n}\n","import { Routes } from '@angular/router';\nimport { ArtSummaryComponent } from '../components/art-summary.component';\nimport { PatientLineListComponent } from '../components/patient-line-list.component';\nimport { DataConversionComponent } from '../components/data-conversion.component';\n\n\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        data: {\n            title: 'Reports',\n            breadcrumb: 'REPORTS'\n        },\n        children: [\n            {\n                path: 'art-summary',\n                component: ArtSummaryComponent,\n                data: {\n                    breadcrumb: 'ART SUMMARY REPORT',\n                    title: 'ART Summary Report'\n                },\n            },\n            {\n                path: 'patients',\n                children: [\n                    {\n                        path: 'line-list',\n                        component: PatientLineListComponent,\n                        data: {\n                            breadcrumb: 'PATIENT LINE LIST',\n                            title: 'Patient Line List'\n                        }\n                    }\n                ],\n                data: {\n                    breadcrumb: 'PATIENT REPORTS',\n                    title: 'Patient Reports'\n                }\n            },\n            {\n                path: 'data-conversion',\n                component: DataConversionComponent,\n                data: {\n                    breadcrumb: 'DATA CONVERSION',\n                    title: 'Data Conversion'\n                }\n            }\n        ]\n    }\n];\n\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatDatepickerModule,\r\n    MatDividerModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatProgressBarModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatTabsModule\r\n} from '@angular/material';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ArtSummaryComponent } from './components/art-summary.component';\r\nimport { ROUTES } from './services/reports.route';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DropDownListModule } from '@syncfusion/ej2-angular-dropdowns';\r\nimport { DatePickerModule, DateRangePickerModule } from '@syncfusion/ej2-angular-calendars';\r\nimport { PatientLineListComponent } from './components/patient-line-list.component';\r\nimport { MatDateFormatModule } from '@lamis/web-core';\r\nimport { DataConversionComponent } from './components/data-conversion.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ArtSummaryComponent,\r\n        DataConversionComponent,\r\n        PatientLineListComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        MatDividerModule,\r\n        MatCardModule,\r\n        MatSelectModule,\r\n        MatButtonModule,\r\n        MatTabsModule,\r\n        MatDatepickerModule,\r\n        RouterModule.forChild(ROUTES),\r\n        MatProgressBarModule,\r\n        MatListModule,\r\n        MatCheckboxModule,\r\n        DateRangePickerModule,\r\n        DropDownListModule,\r\n        DatePickerModule,\r\n        MatDateFormatModule,\r\n        MatRadioModule\r\n    ],\r\n    exports: [\r\n        ArtSummaryComponent,\r\n        DataConversionComponent,\r\n        PatientLineListComponent\r\n    ],\r\n    providers: []\r\n})\r\nexport class ReportsModule {\r\n}\r\n"]}